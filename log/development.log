  [1m[36m (7.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (9.9ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateGymnasia (20171112232214)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.0ms)[0m  rollback transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateGymnasia (20171112232214)
  [1m[35m (0.1ms)[0m  begin transaction
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/ubuntu/workspace/db/migrate/20171112232214_create_gymnasia.rb:7)
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "gymnasia" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "maxUsers" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20171112232214"]]
  [1m[36m (11.8ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateGymnasia (20171113153640)
  [1m[35m (0.1ms)[0m  begin transaction
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/ubuntu/workspace/db/migrate/20171113153640_create_gymnasia.rb:8)
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "gymnasia" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "currentUsers" integer, "maxUsers" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (14.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (9.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateGymnasia (20171113153640)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/ubuntu/workspace/db/migrate/20171113153640_create_gymnasia.rb:8)
  [1m[35m (0.3ms)[0m  CREATE TABLE "gymnasia" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "currentUsers" integer, "maxUsers" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20171113153640"]]
  [1m[35m (11.0ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
